{"version":3,"sources":["services/axiosInstance.js","context/ColumnsContext.js","components/Box.js","components/Dustbin.js","context/ColumnDataContext.js","App.js","reportWebVitals.js","index.js"],"names":["baseUrl","headers","axiosInstance","axios","create","baseURL","ColumnsContext","createContext","ColumnsProvider","children","useState","Columns","setColumns","useEffect","get","then","res","data","catch","err","console","log","Provider","value","style","border","backgroundColor","padding","marginRight","marginBottom","cursor","DragSource","beginDrag","props","name","function","endDrag","monitor","item","getItem","dropResult","getDropResult","localStorage","setItem","JSON","stringify","window","location","reload","connect","connectDragSource","dragSource","isDragging","opacity","useContext","ref","role","height","width","DropTarget","drop","connectDropTarget","dropTarget","isOver","canDrop","handleClear","className","htmlFor","parse","onClick","ColumnsDataContext","ColumnsDataProvider","ChartData","setChartData","loaded","setLoaded","post","App","basicData","length","labels","values","datasets","label","fill","borderColor","tension","DndProvider","backend","HTML5Backend","map","col","type","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.840aec7b.chunk.js","sourcesContent":["import axios from \"axios\";\n\nexport default function (history = null) {\n    let baseUrl = 'https://plotter-task.herokuapp.com/'\n    let headers = {\n        \"Content-Type\": \"application/json\",\n    }\n    const axiosInstance = axios.create({\n        baseURL:baseUrl,\n        headers,\n    });\n    return axiosInstance;\n}\n","import React, { createContext, useEffect, useState } from 'react'\nimport axiosInstance from '../services/axiosInstance';\n\n\nconst ColumnsContext = createContext([{}, () => { }]);\n\nconst ColumnsProvider = ({ children }) => {\n    const [Columns, setColumns] = useState([]) \n\n    useEffect(() => {\n        axiosInstance().get('columns')\n            .then(res => {\n                setColumns(res.data)\n            }).catch(err =>\n                console.log(err)\n            )\n    }, [])\n    return (\n        <ColumnsContext.Provider value={Columns}>\n            {children}\n        </ColumnsContext.Provider>\n    );\n}\n\nexport { ColumnsProvider, ColumnsContext }\n\n","import { useContext } from 'react';\nimport { DragSource } from 'react-dnd';\nimport { ColumnsContext } from '../context/ColumnsContext';\n\n\nconst style = {\n    border: '1px dashed gray',\n    backgroundColor: 'white',\n    padding: '0.5rem 1rem',\n    marginRight: '1.5rem',\n    marginBottom: '1.5rem',\n    cursor: 'move',\n};\nconst ItemTypes = {\n    BOX: 'box',\n  }\nconst Box = ({ name, isDragging, connectDragSource }) => {\n    const opacity = isDragging ? 0.4 : 1;\n    const [ActiveDimention, setActiveDimention] = useContext(ColumnsContext)\n    // const [ActiveMeasure, setMeasure] = useContext(ColumnsContext)\n    \n    return (\n        <div ref={connectDragSource} role={'Box'} data-testid={`box-${name}`} style={{ ...style, opacity }}>\n\t\t\t{name}\n        </div>\n    );\n};\n\nexport default DragSource(ItemTypes.BOX,\n    {\n    \n    beginDrag: (props) => {\n        return { name: props.name ,function: props.function };\n    },\n    endDrag(props, monitor) {\n        const item = monitor.getItem();\n        const dropResult = monitor.getDropResult();\n        console.log(props)\n        if (dropResult) {            \n            if (item.function == \"dimension\") {              \n                localStorage.setItem(\"activDimension\", JSON.stringify([item.name]))\n                \n            } else if (item.function == \"measure\") {\n                localStorage.setItem(\"activMeasure\", JSON.stringify([item.name]))\n                \n                \n            }\n\n        }\n        window.location.reload();\n    },\n}, (connect, monitor) => {\n\n    return {\n        connectDragSource: connect.dragSource(),\n        isDragging: monitor.isDragging(),\n    };\n})(Box);\n","import { useEffect, useState } from 'react';\nimport { DropTarget } from 'react-dnd';\n\nconst ItemTypes = {\n    BOX: 'box',\n}\nconst style = {\n    height: '12rem',\n    width: '100%',\n    padding: '1rem',\n\n};\nconst Dustbin = ({ canDrop, isOver, connectDropTarget }) => {\n    const isActive = canDrop && isOver;\n    \n    let backgroundColor = '#FFF';\n    if (isActive) {\n        backgroundColor = 'green';\n    }\n    else if (canDrop) {\n        backgroundColor = 'darkkhaki';\n    }\n   \n    const handleClear = (name) => {\n        localStorage.setItem(name, \"\")\n        window.location.reload()\n        \n    }\n    return (\n        <div ref={connectDropTarget} style={{ ...style }} role=\"Dustbin\">\n            <div className=\"form-control\" >\n                <label htmlFor=\"\">Dimention</label>\n                <input style={{ backgroundColor }} value={ localStorage.getItem('activDimension') && JSON.parse(localStorage.getItem('activDimension'))} />\n                <button onClick={()=>handleClear(\"activDimension\")}>Clear</button>\n            </div>\n            <div className=\"form-control\">\n                <label htmlFor=\"\">measures</label>\n                <input style={{ backgroundColor }} value={localStorage.getItem('activMeasure') && JSON.parse(localStorage.getItem('activMeasure'))} />\n                <button onClick={()=>handleClear(\"activMeasure\")}>Clear</button>\n            </div>\n            {/* {isActive ? 'Release to drop' : 'Drag a box here'} */}\n        </div>\n    );\n};\nexport default DropTarget(ItemTypes.BOX, {\n    drop: () => ({ name: 'Dustbin' }),\n}, (connect, monitor) => ({\n    connectDropTarget: connect.dropTarget(),\n    isOver: monitor.isOver(),\n    canDrop: monitor.canDrop(),\n}))(Dustbin);\n","import React, { createContext, useEffect, useState } from 'react'\nimport axiosInstance from '../services/axiosInstance';\n\n\nconst ColumnsDataContext = createContext([{}, () => { }]);\n\nconst ColumnsDataProvider = ({ children }) => {\n  const [ChartData, setChartData] = useState([])\n  const [loaded, setLoaded] = useState(false)\n  \n  let data = {}\n  if (localStorage.getItem('activDimension') && localStorage.getItem('activMeasure')) {\n    data = {\n      \"dimension\": JSON.parse(localStorage.getItem('activDimension'))[0],\n      \"measures\": JSON.parse(localStorage.getItem('activMeasure'))\n    }\n  }\n\n  useEffect(() => {\n    axiosInstance().post('data', data)\n      .then(res => {\n        setChartData(res.data)\n        setLoaded(true)\n      }).catch(err => {\n        console.log(err)\n        setLoaded(false)\n      })\n\n\n  }, [])\n  const value = [ChartData, loaded]\n  return (\n    <ColumnsDataContext.Provider value={value}>\n      {children}\n    </ColumnsDataContext.Provider>\n  );\n}\n\nexport { ColumnsDataProvider, ColumnsDataContext }\n\n","import axios from \"axios\";\nimport { useContext, useEffect, useReducer, useState } from \"react\";\nimport './components/style.css'\nimport { Chart } from 'primereact/chart';\nimport { DndProvider } from 'react-dnd'\nimport { HTML5Backend } from 'react-dnd-html5-backend'\nimport Box from \"./components/Box\";\nimport Dustbin from \"./components/Dustbin\";\nimport { ColumnsContext } from \"./context/ColumnsContext\";\nimport { ColumnsDataContext } from \"./context/ColumnDataContext\";\n\n\nfunction App() {\n  const Columns = useContext(ColumnsContext)\n  // const setActiveDimention = useContext(ColumnsContext)\n  const [ChartData] = useContext(ColumnsDataContext)\n  const loaded = useContext(ColumnsDataContext)\n\n  \n  // let dimentions = Columns.filter(col => col.function == \"dimension\");\n  // let measures = Columns.filter(col => col.function == \"measure\");\n  console.log(Columns)\n  \n  useEffect(() => {\n    !window.localStorage.getItem(\"activMeasure\")\n    && window.localStorage.setItem(\"activMeasure\", '');\n    \n    !window.localStorage.getItem(\"activDimension\")\n    && window.localStorage.setItem(\"activDimension\", ['']);\n  }, [])\n\n  // Chart Data\n  let basicData\n  if (ChartData.length > 0) {\n    basicData = {\n      labels: ChartData[0].values,\n      datasets: [\n        {\n          label: ChartData[1].name,\n          data: ChartData[1].values,\n          fill: false,\n          borderColor: '#42A5F5',\n          tension: 0\n        }\n\n      ]\n    };\n  }\n\n\n  return (\n    <div className=\"App\">\n      <DndProvider backend={HTML5Backend}>\n\n        <div className=\"content d-flex\">\n          {/* Sidebar  */}\n          <div className=\"sidebar\">\n            <h3>Columns</h3>\n            <hr></hr>\n            {Columns.length > 0\n            ?<ul>\n              {Columns.map(col => (\n                <li><Box name={col.name} function={col.function} ></Box></li>\n              ))}\n              </ul>\n              :<p>Loading Columns...</p> \n              \n          }\n          </div>\n          {/* Main Content  */}\n          <div className=\"main-content\">\n            {/* Drop Zone */}\n            <Dustbin />\n\n            {/* Chart */}\n            {loaded[1]\n              ? <Chart type=\"line\" data={basicData} />\n              : <p className=\"no-data\">No Data Loaded</p>\n\n            }\n          </div>\n        </div>\n      </DndProvider>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { ColumnsDataProvider } from './context/ColumnDataContext';\nimport { ColumnsProvider } from './context/ColumnsContext';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ColumnsProvider>\n      <ColumnsDataProvider>\n      \n    <App />\n      </ColumnsDataProvider>\n    </ColumnsProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}